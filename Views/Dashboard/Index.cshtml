@{
    ViewData["Title"] = "RTT Dashboard";
}

<h2>@ViewData["Title"]</h2>

<!-- Chart for RTT -->
<canvas id="rttChart" width="600" height="400"></canvas>

<!-- Alert Section -->
<div id="alertSection" style="margin-top: 20px; font-weight: bold; color: red;"></div>

<!-- Node Info Table -->
<div id="nodeTableSection" style="margin-top: 40px;">
    <h3>🧩 Node Info</h3>
    <table border="1" cellpadding="8">
        <thead>
            <tr>
                <th>Data Center</th>
                <th>Role</th>
                <th>RTT (ms)</th>
                <th>Sync Delta (s)</th>
            </tr>
        </thead>
        <tbody id="nodeTableBody"></tbody>
    </table>
</div>

<!-- Chart.js library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    async function loadRttData() {
        try {
            const response = await fetch('/api/metrics/rtt'); // ✅ Use relative path
            const json = await response.json();

            const rttData = json.rttData;
            const alerts = json.alerts;

            // Populate chart
            const labels = rttData.map(item => item.dataCenter);
            const rttValues = rttData.map(item => item.rtt);

            const ctx = document.getElementById('rttChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'RTT (ms)',
                        data: rttValues,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 2,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'RTT (ms)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Data Centers'
                            }
                        }
                    }
                }
            });

            // Show alerts
            const alertDiv = document.getElementById('alertSection');
            alertDiv.innerHTML = alerts.length > 0
                ? alerts.map(a => a.message).join("<br>")
                : "✅ All data centers are healthy.";

            // Populate table
            const tableBody = document.getElementById('nodeTableBody');
            tableBody.innerHTML = rttData.map(node => `
                <tr>
                    <td>${node.dataCenter}</td>
                    <td>${node.role}</td>
                    <td>${node.rtt}</td>
                    <td>${node.delta.toFixed(2)}</td>
                </tr>
            `).join('');

        } catch (error) {
            console.error("Failed to load RTT data:", error);
            document.getElementById('alertSection').innerText = "❌ Error loading data.";
        }
    }

    loadRttData();
</script>
